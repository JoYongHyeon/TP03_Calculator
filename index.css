body {
    width: 500px;
    margin: 4% auto;
    font-family: sans-serif;
    /* 글자 간격을 지정 속성
    nomal: 기본값으로 문자에 공백이 들어가지 않음, 0px과 같음 
    길이값 : px, em, %등으로 지정(음수가능) */    
    letter-spacing: 5px;
    font-size: 1.8rem;
    -moz-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;
}

.calculator {
    padding: 20px;
    box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);
    border-radius: 1px;
}

.input {
    border: 1px solid #ddd;
    border-radius: 1px;
    height: 60px;
    padding-right: 15px;
    padding-top: 10px;
    text-align: right;
    margin-right: 6px;
    font-size: 2.5rem;
    /* overflow-x(visible, hidden, scroll, autho) 
    박스의 내용에 내용이 더 길때, 어떻게 보일지 선택하는 속성
    visible(기본값): 특정 요소가 박스를 넘어 가더라도, 그대로 보여준다.
    
    hidden: 부모 요소의 범위를 넘어가는 자식 요소의 부분은 보이지 않도록 처리
    (가로스크롤바가 나타나지 않을 뿐 브라우저에 따로 세로스크롤바는 나타남)
    
    scroll:부모 요소의 범위를 넘어가는 자식요소의 부분은 보이지않지만,
    사용자가 확인할 수 있도록 스크롤바를 표시

    auto: 부모요소의 범위를 넘어가는 자식 요소의 부분이 있을 경우
    해당 부분을 보이지 않도록 처리하고, 사용자가 해당 부분을 확인할 수 있도록
    스크롤바를 표시한다.(내용이 넘칠때만 가로 스크롤바 표시)

    overflow-y
    visible(기본값):특정 요소가 박스를 넘어 가더라도, 그대로 보여준다.

    hidden: 부모요소의 범위를 넘어가는 자식 요소의 부분은 보이지 않도록 처리
    (세로 스크롤바가 나타나지 않을 뿐 브라우저에 따로 가로스크롤바는 나타남)

    scroll:부모 요소의 범위를 넘어가는 자식요소의 부분은 보이지 않지만,
    사용자가 확인할 수 있도록 스크롤바를 표시한다.

    auto: 부모요소의 범위를 넘어가는 자식요소의 부분이 있을 경우 
    해당 부분을 보이지 않도록 처리하고 사용자가 해당 부분을 확인 할 수
    있도록 스크롤바를 표시
     */
    overflow-x: auto;
    /* 모든 프로퍼티의 변화를 2초에 걸쳐 전환한다. */
    transition: all .2s ease-in-out;
}

/* html에서 요소에 마우스를 올렸을 때 반응하게 하는 css요소 */
.input:hover {
    border: 1px solid #bbb;
    -webkit-box-shadow: inset 0px 1px 4px 0px rgba(0, 0, 0, 0.2);
    /* 선택한 요소에 그림자 효과를 만들어줌 */
    box-shadow: inset 0px 1px 4px 0px rgba(0, 0, 0, 0.2);
}


.buttons {}
.operators {}
/* +, -, x, / 버튼이 있는 태그 */
.operators div {
    display: inline-block;
    border: 1px solid #bbb;
    border-radius: 1px;
    width: 77px;
    text-align: center;
    padding: 10px;
    margin: 20px 4px 10px 0;
    cursor: pointer;
    background-color: #ddd;
    transition: border-color .2s ease-in-out, background-color .2s, box-shadow .2s;
  }
/* +, -, x, / 버튼위로 마우스를 올렸을 때 */
.operators div:hover {
    background-color: #ddd;
    -webkit-box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);
    box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);
    border-color: #aaa;
}
/* +, -, x, / 사용자가 활성화한 요소(버튼 등)를 나타냄
 즉 마우스 버튼을 누르는 순간부터 떼는 시점까지를 의미 */
.operators div:active {
    font-weight: bold;
}
/* 남은 숫자버튼 */
.leftPanel {
    display: inline-block;
}

.numbers div {
    display: inline-block;
    border: 1px solid #ddd;
    border-radius: 1px;
    width: 77px;
    text-align: center;
    padding: 10px;
    margin: 10px 4px 10px 0;
    cursor: pointer;
    background-color: #f9f9f9;
    transition: border-color .2s ease-in-out, background-color .2s, box-shadow .2s;
}

.numbers div:hover {
    background-color: #f1f1f1;
    -webkit-box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);
    box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);
}

.numbers div:active {
    font-weight: bold;
}

div .equal {
    display: inline-block;
    border: 1px solid #3079ed;
    border-radius: 1px;
    width: 17%;
    text-align: center;
    padding: 131px 9px;
    margin: 10px 6px 10px 0;
    /* vertical-align 속성은 inline 이나 inline-block 요소에만 적용됨
    따라서 block 요소인 <div>는 이 속성을 썼을 때 작동되지 않음. 
    vertical-align: inline 또는 table-cell box에서 수직 정렬을 지정한다.
     top : 부모 요소의 상단으로 맞춥니다. 
     */
    vertical-align: top;
    cursor: pointer;
    color: #FFF;    
    background-color: #4d90fe;
    transition: all .2s ease-in-out;
}

div .equal:hover {
    background-color: #307cf9;
    -webkit-box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);
    box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);
    border-color: #1857BB
}

div .equal:active {
    font-weight: bold;
}